{"remainingRequest":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\src\\vue\\bhhc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\src\\vue\\bhhc\\src\\components\\WFourTaxes.vue?vue&type=template&id=d03ecce8&scoped=true&","dependencies":[{"path":"C:\\src\\vue\\bhhc\\src\\components\\WFourTaxes.vue","mtime":1576768298764},{"path":"C:\\src\\vue\\bhhc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}