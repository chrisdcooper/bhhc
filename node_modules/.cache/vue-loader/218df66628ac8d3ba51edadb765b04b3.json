{"remainingRequest":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\src\\vue\\bhhc\\src\\components\\DetailModal.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"C:\\src\\vue\\bhhc\\src\\components\\DetailModal.vue","mtime":1576773988417},{"path":"C:\\src\\vue\\bhhc\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW5wdXQ6LW1vei1yZWFkLW9ubHkgeyAvKiBGb3IgRmlyZWZveCAqLw0KICAgIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50Ow0KfQ0KaW5wdXQ6cmVhZC1vbmx5IHsNCiAgICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5jcmV0ZWRpdntiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9jcmV0ZWNkbi5hY2tsaWUuY29tL3NyYy9hc3NldHMvZ2xvYmFsL0NyZXRlMjhoLnBuZycpO2JvcmRlci1jb2xvcjojZTUxNDAwO30NCi5zaGFmZmVyZGl2e2JhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cDovL2NyZXRlY2RuLmFja2xpZS5jb20vc3JjL2Fzc2V0cy9nbG9iYWwvU2hhZmZlcjI4aC5wbmcnKTtib3JkZXItY29sb3I6IzAwNGM5Nzt9DQouYWRkY29tcGFueWRpdntiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHA6Ly9jcmV0ZWNkbi5hY2tsaWUuY29tL3NyYy9hc3NldHMvZ2xvYmFsL2FkZC1haWNvbi5wbmcnKTtib3JkZXItY29sb3I6I2NjY2FjYTt9DQoucXVhbGlmeWJveHsgbWFyZ2luLXRvcDoxMHB4OyB9DQouZHB7d2lkdGg6OTAlO2Zsb2F0OmxlZnQ7fQ0KLmRwLWNsZWFye2Zsb2F0OmxlZnQ7aGVpZ2h0OjIwcHg7d2lkdGg6MjBweDt9DQo="},{"version":3,"sources":["DetailModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAggEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DetailModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div>\r\n      <b-modal :id=\"id\" :title=\"modaltitle\" size=\"xl\" ok-title=\"Update\" @ok=\"handleDataUpdate\" ref=\"detailModal\">\r\n        <b-row ref=\"detailModalRow\"> \r\n          <b-col style=\"border:0px solid green\" ref=\"detailModalCol\">\r\n            <div class=\"row topdetail\">\r\n              <div class=\"col\"><label class=\"lbldetail\">Name:</label>{{nameprop}}</div>\r\n              <div class=\"col\"><label class=\"lbldetail\" style=\"float:left\">Company:</label>\r\n                <div v-bind:class=\"[{ cretediv: (companypropclass == '1110') }, { shafferdiv: (companypropclass == '2101') },{ addcompanydiv: (companypropclass !== '1110' && companypropclass !== '2101') },'company-detail']\" @click=\"handleCompanyImageClick()\"></div> <!--S#004C97 C#E51400 H#992149-->\r\n              </div>\r\n              <div class=\"col\"><label class=\"lbldetail\">LMSID:</label>{{lmsid}}</div>      \r\n              <div class=\"col\"><label class=\"lbldetail\">EnityId:</label>{{entityid}}</div>      \r\n            </div>\r\n            <div class=\"row detailrow\">\r\n              <div class=\"col \"><label class=\"lbldetail\">SSN:</label>              \r\n                  <b-form-input\r\n                    id=\"inpssn\"\r\n                    v-model=\"ssnprop\"\r\n                    aria-describedby=\"input-live-feedback-ssn\"\r\n                    placeholder=\"Enter Employee SSN\"\r\n                    :state=\"ssnState\"\r\n                    ref=\"inpssn\"\r\n                    trim\r\n                    maxlength=\"9\"\r\n                    size=\"sm\"\r\n                  ></b-form-input> \r\n                  <b-form-invalid-feedback id=\"input-live-feedback-ssn\">\r\n                    Must be 9 nmumeric values or empty\r\n                  </b-form-invalid-feedback>                  \r\n              </div> \r\n              <div class=\"col\"><label class=\"lbldetail\">Driver Code:</label>                           \r\n                  <b-form-input\r\n                    id=\"inpdcode\"\r\n                    v-model=\"drivercodeprop\"\r\n                    aria-describedby=\"input-live-feedback-drivercode\"\r\n                    placeholder=\"Enter Driver Code\"\r\n                    :state=\"drivercodeState\"\r\n                    ref=\"inpdcode\"\r\n                    trim\r\n                    maxlength=\"6\"\r\n                    size=\"sm\" \r\n                  ></b-form-input> \r\n                  <b-form-invalid-feedback id=\"input-live-feedback-drivercode\">\r\n                    Must enter 3 or more characters or empty\r\n                  </b-form-invalid-feedback>  \r\n                </div>\r\n                <div class=\"col\"><label class=\"lbldetail\">Birthdate:</label>    \r\n                    <datepicker v-model=\"birthdateprop\" class=\"dp\"  format=\"MM/dd/yyyy\"></datepicker>                    \r\n                </div> \r\n                <div class=\"col\"><label class=\"lbldetail\">Qualified:</label>    \r\n                    <datepicker v-model=\"effdtprop\" class=\"dp\" format=\"MM/dd/yyyy\"></datepicker>\r\n                </div>            \r\n            </div>\r\n            <div class=\"row detailrow topdetail\">\r\n              <div class=\"col \"><label class=\"lbldetail\">First Name:</label>           \r\n                <b-form-input\r\n                  id=\"inpfirstname\"\r\n                  v-model=\"firstnameprop\"\r\n                  placeholder=\"Enter First Name\"\r\n                  ref=\"inpfirstname\"\r\n                  trim\r\n                  maxlength=\"30\"\r\n                  size=\"sm\" \r\n                  :state=\"firstnamestate\" \r\n                  aria-describedby=\"input-live-feedback-firstname\"\r\n                ></b-form-input>   \r\n                <b-form-invalid-feedback id=\"input-live-feedback-firstname\">\r\n                  Must enter a valid first name\r\n                </b-form-invalid-feedback>  \r\n              </div>\r\n              <div class=\"col\"><label class=\"lbldetail\">Middle Name:</label>    \r\n                  <b-form-input\r\n                    id=\"inplastname\"\r\n                    v-model=\"middlenameprop\"\r\n                    placeholder=\"Enter Middle Name\"\r\n                    ref=\"inplastname\"\r\n                    trim\r\n                    maxlength=\"30\"\r\n                    size=\"sm\" \r\n                    :state=\"middlenameState\"\r\n                    aria-describedby=\"input-live-feedback-middlename\"\r\n                  ></b-form-input>   \r\n                  <b-form-invalid-feedback id=\"input-live-feedback-middlename\">\r\n                    May not contain special characters\r\n                  </b-form-invalid-feedback>  \r\n                </div>      \r\n              <div class=\"col \"><label class=\"lbldetail\">Last Name:</label>           \r\n                <b-form-input\r\n                  id=\"inplastname\"\r\n                  v-model=\"lastnameprop\"\r\n                  placeholder=\"Enter Last Name\"\r\n                  ref=\"inplastname\"\r\n                  trim\r\n                  maxlength=\"40\"\r\n                  size=\"sm\" \r\n                  :state=\"lastnamestate\" \r\n                  aria-describedby=\"input-live-feedback-lastname\"\r\n                ></b-form-input>   \r\n                <b-form-invalid-feedback id=\"input-live-feedback-lastname\">\r\n                  Must enter a valid last name\r\n                </b-form-invalid-feedback> \r\n              </div>  \r\n              <div class=\"col\"><label class=\"lbldetail\">Preferred Name:</label>    \r\n                <b-form-input\r\n                  id=\"inpprefname\"\r\n                  v-model=\"preferednameprop\"\r\n                  ref=\"inpprefname\"\r\n                  trim\r\n                  maxlength=\"40\"\r\n                  size=\"sm\" \r\n                  :state=\"preferrednameState\"\r\n                  aria-describedby=\"input-live-feedback-preferred\"\r\n                ></b-form-input>  \r\n                <b-form-invalid-feedback id=\"input-live-feedback-preferred\">\r\n                  May not contain special characters\r\n                </b-form-invalid-feedback>  \r\n              </div>  \r\n            </div>\r\n            <div class=\"row detailrow topdetail\"> \r\n              <div class=\"col\"><label class=\"lbldetail\">Terminal Code:</label>          \r\n                    <b-form-select id=\"inpterminal\" ref=\"inpterminal\" v-model=\"terminaprop\" size=\"sm\" @change=\"termChange($event)\">              \r\n                      <option v-for=\"terminal in terminals\" :value=\"trimValues(terminal.FLTCDE)\" :key=\"trimValues(terminal.FLTCDE)\" >{{trimValues(terminal.FLTCDE)}}&nbsp;{{terminal.FLTNAM}}</option>\r\n                    </b-form-select>                         \r\n              </div>   \r\n              <div class=\"col\" style=\"border-right:1px solid lightgrey;\"><label class=\"lbldetail\">Manager:</label>{{terminalsuperprop}}   \r\n              </div>  \r\n              <div class=\"col\"><label class=\"lbldetail\">Division:</label>          \r\n                    <b-form-select id=\"inpdivisions\" ref=\"inpdivisions\" v-model=\"divisionprop\" size=\"sm\" @change=\"divChange($event)\">              \r\n                      <option v-for=\"div in divisions\" :value=\"trimValues(div.DIVCDE)\" :key=\"trimValues(div.DIVCDE)\" >{{trimValues(div.DIVCDE)}}&nbsp;{{div.DIVNME}}&nbsp;-&nbsp;{{div.DIVCO}}</option>\r\n                    </b-form-select>                         \r\n              </div>  \r\n              <div class=\"col\">\r\n                <!--<label class=\"lbldetail\">SUI Code:</label>{{sui}}<br>-->\r\n                <label class=\"lbldetail\">Cost Center:</label>\r\n                <b-form-input\r\n                  id=\"inpcostctr\"\r\n                  v-model=\"homedeptprop\"\r\n                  ref=\"inpcostctr\"\r\n                  trim\r\n                  maxlength=\"6\"\r\n                  size=\"sm\" \r\n                  :state=\"costcenterState\"\r\n                  aria-describedby=\"input-live-feedback-cost\"\r\n                ></b-form-input>  \r\n                <b-form-invalid-feedback id=\"input-live-feedback-cost\">\r\n                  May not contain special characters\r\n                </b-form-invalid-feedback>                  \r\n              </div>  \r\n            </div>\r\n            <div class=\"row detailrow topdetail\">    \r\n              <div class=\"col\"><label class=\"lbldetail\">Comp Rate:</label>    \r\n                <b-form-input\r\n                  id=\"inpcomprate\"\r\n                  v-model=\"comprateprop\"\r\n                  ref=\"inpcomprate\"\r\n                  trim\r\n                  maxlength=\"40\"\r\n                  size=\"sm\" \r\n                  :state=\"compratestate\" \r\n                  aria-describedby=\"input-live-feedback-comp\"\r\n                ></b-form-input>  \r\n                <b-form-invalid-feedback id=\"input-live-feedback-comp\">\r\n                  Must enter a valid comp rate\r\n                </b-form-invalid-feedback> \r\n              </div>    \r\n              <div class=\"col\"><label class=\"lbldetail\">Frequency:</label>          \r\n                <b-form-select id=\"inpfrequency\" ref=\"inpfrequency\" v-model=\"compfrequencyprop\" size=\"sm\" >              \r\n                  <option v-for=\"frequency in frequencies\" :value=\"frequency.Abbrv\" :key=\"frequency.Abbrv\" >({{frequency.Abbrv}})&nbsp;{{frequency.Desc}}</option>\r\n                </b-form-select>    \r\n              </div>   \r\n              <div class=\"col\" style=\"border-right:1px solid lightgrey;\"><label class=\"lbldetail\">Hourly Rate:</label>    \r\n                <b-form-input\r\n                  id=\"inphourlyrate\"\r\n                  v-model=\"hourlyrateprop\"\r\n                  ref=\"inphourlyrate\"\r\n                  trim\r\n                  maxlength=\"40\"\r\n                  size=\"sm\" \r\n                  :state=\"hourlyratestate\" \r\n                  aria-describedby=\"input-live-feedback-hourly\"\r\n                ></b-form-input>  \r\n                <b-form-invalid-feedback id=\"input-live-feedback-hourly\">\r\n                  Must enter a valid hourly rate\r\n                </b-form-invalid-feedback> \r\n              </div> \r\n              <div class=\"col\" style=\"background-color:\" v-if=\"this.fleetsverfied == 1 && this.safetyqualified !== 1 && this.payrollaudited == 0\">\r\n                 <b-form-radio-group\r\n                    id=\"btn-radios-qualify\"\r\n                    v-model=\"safetyqualifyprop\"\r\n                    :options=\"qualifyoptions\"\r\n                    buttons\r\n                    button-variant=\"outline-primary\"\r\n                    class=\"qualifybox\"\r\n                    size=\"lg\"\r\n                    name=\"radio-btn-outline\"\r\n                    @change=\"changeQualification($event)\"\r\n                  ></b-form-radio-group> \r\n              </div> \r\n              <div class=\"col\" style=\"background-color:\" v-if=\"this.safetyqualified == 1\">\r\n                 <b-form-radio-group\r\n                    id=\"btn-radios-qualify\"\r\n                    v-model=\"payrollqualifyprop\"\r\n                    :options=\"payrollqualifyoptions\"\r\n                    buttons\r\n                    button-variant=\"outline-primary\"\r\n                    class=\"qualifybox\"\r\n                    size=\"lg\"\r\n                    name=\"radio-btn-outline\"\r\n                    @change=\"changeQualification($event)\"\r\n                  ></b-form-radio-group> \r\n              </div> \r\n            </div>\r\n            <addressee ref=\"mailingaddress\"\r\n              typelabel=\"Mailing Address\"\r\n              streetonelbl=\"Street 1:\"\r\n              streettwolbl=\"Street 2:\"\r\n              streetthreelbl=\"Street 3:\"\r\n              citylbl=\"City\"\r\n              statelbl=\"State\"\r\n              ziplbl=\"Zip\"\r\n              countrylbl=\"Country\"\r\n              streetoneid=\"inpstreetone\"\r\n              streettwoid=\"inpstreettwo\"\r\n              streetthreeid=\"inpstreetthree\"\r\n              cityid=\"inpcity\"\r\n              stateid=\"inpstate\"\r\n              countryuid=\"inpcountry\"\r\n              :streetone=\"streetone\"\r\n              :streettwo=\"streettwo\"\r\n              :streetthree=\"streetthree\"\r\n              :city=\"city\"\r\n              :state=\"state\"\r\n              :zip=\"zip\"\r\n              :country=\"country\"\r\n              :entityid=\"entityid\"\r\n              :lmsid=\"lmsid\"\r\n              :states=\"states\"\r\n              :countries=\"countries\"           \r\n              typeofaddress=\"main\"\r\n              :makeToast=\"makeToast\"\r\n              :runupdate=\"runupdate\"\r\n              :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n              :ft=\"ftprop\">\r\n            </addressee>\r\n            <addressee  ref=\"physicaladdress\"\r\n              typelabel=\"Physical Address\"\r\n              streetonelbl=\"Street 1:\"\r\n              streettwolbl=\"Street 2:\"\r\n              streetthreelbl=\"Street 3:\"\r\n              citylbl=\"City:\"\r\n              statelbl=\"State:\"\r\n              ziplbl=\"Zip:\"\r\n              countrylbl=\"Country:\"\r\n              streetoneid=\"inpstreetoneother\"\r\n              streettwoid=\"inpstreettwoother\"\r\n              streetthreeid=\"inpstreetthreeother\"\r\n              cityid=\"inpcityother\"\r\n              stateid=\"inpstateother\"\r\n              countryuid=\"inpcountryother\"\r\n              :streetone=\"streetoneother\"\r\n              :streettwo=\"streettwoother\"\r\n              :streetthree=\"streetthreeother\"\r\n              :city=\"cityother\"\r\n              :state=\"stateother\"\r\n              :zip=\"zipother\"\r\n              :country=\"countryother\"\r\n              :entityid=\"entityid\"\r\n              :lmsid=\"lmsid\"\r\n              :states=\"states\"\r\n              :countries=\"countries\"\r\n              typeofaddress=\"other\"\r\n              :makeToast=\"makeToast\"\r\n              :runupdate=\"runupdate\"\r\n              :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n              :ft=\"ftprop\">\r\n            </addressee>\r\n            \r\n            <div class=\"row detailrow\" v-if=\"this.safetyqualified == 1\">      \r\n              <div class=\"col\" v-for=\"phone in phonerowone\" :value=\"phone.TypeId\" :key=\"phone.TypeId\" >        \r\n              <phone \r\n                :entityid=\"entityid\"\r\n                :lmsid=\"lmsid\"      \r\n                :typeid = \"phone.TypeId\"\r\n                :ptypeof = \"phone.TypeVal\"\r\n                :phonetypelbl=\"phone.TypeDesc\"\r\n                :phoneareacodeid=\"phone.TypeId + phone.TypeVal + 'Area'\"\r\n                :phoneprefixid=\"phone.TypeId + phone.TypeVal + 'Pref'\"\r\n                :phonesuffixid=\"phone.TypeId + phone.TypeVal + 'Suff'\"\r\n                :makeToast=\"makeToast\"\r\n                :runupdate=\"runupdate\"\r\n                :directload=\"phonedirectload\"\r\n                :defaultphone=\"homephone\"\r\n                :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                :ft=\"ftprop\"></phone>\r\n              </div>  \r\n            </div>  \r\n            <div class=\"row detailrow topdetail\" v-if=\"this.safetyqualified == 1\">      \r\n              <div class=\"col\" v-for=\"phone in phonerowtwo\" :value=\"phone.TypeId\" :key=\"phone.TypeId\" >        \r\n              <phone \r\n                :entityid=\"entityid\"\r\n                :lmsid=\"lmsid\"      \r\n                :typeid = \"phone.TypeId\"\r\n                :ptypeof = \"phone.TypeVal\"\r\n                :phonetypelbl=\"phone.TypeDesc\"\r\n                :phoneareacodeid=\"phone.TypeId + phone.TypeVal + 'Area'\"\r\n                :phoneprefixid=\"phone.TypeId + phone.TypeVal + 'Pref'\"\r\n                :phonesuffixid=\"phone.TypeId + phone.TypeVal + 'Suff'\"\r\n                :makeToast=\"makeToast\"\r\n                :runupdate=\"runupdate\"\r\n                :directload=\"phonedirectload\"\r\n                :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                :ft=\"ftprop\"></phone>\r\n              </div>  \r\n            </div>\r\n            \r\n            <div class=\"row detailrow topdetail\" v-if=\"this.safetyqualified == 1\">      \r\n              <div class=\"col\">\r\n                <email\r\n                  :entityid=\"entityid\"\r\n                  :lmsid=\"lmsid\"      \r\n                  typeofemail = \"main\"\r\n                  emailtypelbl=\"Email Address\"\r\n                  :emailaddress=\"emailaddressone\"\r\n                  emailprefixid=\"EmailOnePref\"\r\n                  emailsuffixid=\"EmailOneSuff\"\r\n                  :runupdate=\"runupdate\"\r\n                  :makeToast=\"makeToast\"\r\n                  :camelize=\"camelize\"\r\n                  :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                  :ft=\"ftprop\"></email>\r\n              </div>\r\n              <div class=\"col\">\r\n                <email\r\n                  :entityid=\"entityid\"\r\n                  :lmsid=\"lmsid\"      \r\n                  typeofemail = \"alternate\"\r\n                  emailtypelbl=\"Email Address Alternate\"\r\n                  :emailaddress=\"emailaddresstwo\"\r\n                  emailprefixid=\"EmailTwoPref\"\r\n                  emailsuffixid=\"EmailTwoSuff\"\r\n                  :runupdate=\"runupdate\"\r\n                  :makeToast=\"makeToast\"\r\n                  :camelize=\"camelize\"                  \r\n                  :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                  :ft=\"ftprop\"></email>\r\n              </div>\r\n            </div>            \r\n            <div v-if=\"this.safetyqualified == 1\">  \r\n                <emergencycontact\r\n                  typelabel=\"Emergency Contact\"\r\n                  :entityid=\"entityid\"\r\n                  :lmsid=\"lmsid\"     \r\n                  :relationshiptypes=\"relationshiptypes\"\r\n                  emergencycontactnameid=\"inpemergencycontactname\"\r\n                  :states=\"states\"\r\n                  :countries=\"countries\"\r\n                  :runupdate=\"runupdate\"\r\n                  :makeToast=\"makeToast\"\r\n                  :fixNull=\"fixNull\"\r\n                  :ft=\"ftprop\"                 \r\n                  :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                >\r\n                </emergencycontact>\r\n\r\n                <wfour \r\n                    :entityid=\"entityid\"\r\n                    :lmsid=\"lmsid\"  \r\n                    wfourfedtypelbl=\"Federal W4\"\r\n                    wfourfedexemptptslbl=\"Exemption Points:\"\r\n                    wfourfedexemptptsid=\"wfourfedexemptptsid\"\r\n                    wfourfedaddtllbl=\"Additional Witholding:\"\r\n                    wfourfedaddtlid=\"wfourfedaddtlid\"\r\n                    wfourfedmarstatlbl=\"Marital Status:\"\r\n                    wfourfedmarstatid=\"wfourfedmarstatid\"\r\n                    wfourfedtaxblocklbl=\"Tax Block:\"\r\n                    wfourstatetypelbl=\"State W4\"\r\n                    wfourstateexemptptslbl=\"Exemption Points:\"\r\n                    wfourstateexemptptsid=\"wfourstateexemptptsid\"\r\n                    wfourstateaddtllbl=\"Additional Witholding:\"\r\n                    wfourstateaddtlid=\"wfourstateaddtlid\"\r\n                    wfourstatemarstatlbl=\"Marital Status:\"\r\n                    wfourstatemarstatid=\"wfourstatemarstatid\"\r\n                    wfourstatetaxblocklbl=\"Tax Block:\"\r\n                    wfourstatetaxcodeslbl=\"Tax Codes:\"\r\n                    wfourstatetaxcodesid=\"wfourstatetaxcodesid\"                  \r\n                    wfourfedsuilbl=\"SUI:\"\r\n                    wfourfedsuiid=\"wfourfedsuiid\"\r\n                    :statetaxcodes=\"statetaxcodes\"\r\n                    :fedmaritalstatus=\"fedmaritalstatus\"\r\n                    :statemaritalstatus=\"statemaritalstatus\"\r\n                    :suicodes=\"suicodesdist\"\r\n                    :runupdate=\"runupdate\"\r\n                    :makeToast=\"makeToast\"\r\n                    :camelize=\"camelize\"\r\n                    :ft=\"ftprop\"                 \r\n                    :containsSpecialCharacters=\"containsSpecialCharacters\"\r\n                    :fixNull=\"fixNull\"\r\n                    ></wfour>\r\n                    <div class=\"topdetail\">\r\n                    <div class=\"lblTitleRow\">I9 Data</div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Proof of Citizenship 1:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizenone\"\r\n                            v-model=\"citizenproofoneprop\"\r\n                            ref=\"pcitizenone\"\r\n                            trim\r\n                            maxlength=\"20\"\r\n                            size=\"sm\" \r\n                            :state=\"citizenproofonestate\" \r\n                            aria-describedby=\"input-live-feedback-proof-one\"\r\n                        ></b-form-input>       \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-proof-one\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                  \r\n                      </div>         \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Expires:</label>    \r\n                        <datepicker v-model=\"proofexpiredtoneprop\" class=\"dp\"  format=\"MM/dd/yyyy\" :clear-button=\"true\"></datepicker>                        \r\n                      </div>      \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Citizenship Country:</label>                                                 \r\n                        <b-form-select id=\"pcitizenonecountry\" ref=\"pcitizenonecountry\" v-model=\"citizencountryoneprop\" size=\"sm\" >              \r\n                            <option v-for=\"country in isocountries\" :value=\"country.AlphaThreeCode\" :key=\"country.AlphaThreeCode\" >{{country.AlphaThreeCode}}&nbsp;-&nbsp;({{country.CountryName}})</option>\r\n                        </b-form-select>                              \r\n                      </div>\r\n                    </div>      \r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Proof of Citizenship 2:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizentwo\"\r\n                            v-model=\"citizenprooftwoprop\"\r\n                            ref=\"pcitizentwo\"\r\n                            trim\r\n                            maxlength=\"20\"\r\n                            size=\"sm\" \r\n                            :state=\"citizenprooftwostate\" \r\n                            aria-describedby=\"input-live-feedback-proof-two\"\r\n                        ></b-form-input>        \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-proof-two\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                   \r\n                      </div>         \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Expires:</label>    \r\n                        <datepicker v-model=\"proofexpiredttwoprop\" class=\"dp\"  format=\"MM/dd/yyyy\" :clear-button=\"true\"></datepicker>                        \r\n                      </div>      \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Citizenship Country:</label>                                                  \r\n                        <b-form-select id=\"pcitizentwocountry\" ref=\"pcitizentwocountry\" v-model=\"citizencountrytwoprop\" size=\"sm\" >              \r\n                            <option v-for=\"country in isocountries\" :value=\"country.AlphaThreeCode\" :key=\"country.AlphaThreeCode\" >{{country.AlphaThreeCode}}&nbsp;-&nbsp;({{country.CountryName}})</option>\r\n                        </b-form-select>                           \r\n                      </div>\r\n                    </div>     \r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Proof of Citizenship 3:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizenthree\"\r\n                            v-model=\"citizenproofthreeprop\"\r\n                            ref=\"pcitizenthree\"\r\n                            trim\r\n                            maxlength=\"20\"\r\n                            size=\"sm\" \r\n                            :state=\"citizenproofthreestate\" \r\n                            aria-describedby=\"input-live-feedback-proof-three\"\r\n                        ></b-form-input>       \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-proof-three\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                    \r\n                      </div>         \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Expires:</label>    \r\n                        <datepicker v-model=\"proofexpiredtthreeprop\" class=\"dp\"  format=\"MM/dd/yyyy\" :clear-button=\"true\"></datepicker>                        \r\n                      </div>      \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Citizenship Country:</label>                                                 \r\n                        <b-form-select id=\"pcitizenthreecountry\" ref=\"pcitizenthreecountry\" v-model=\"citizencountrythreeprop\" size=\"sm\" >              \r\n                            <option v-for=\"country in isocountries\" :value=\"country.AlphaThreeCode\" :key=\"country.AlphaThreeCode\" >{{country.AlphaThreeCode}}&nbsp;-&nbsp;({{country.CountryName}})</option>\r\n                        </b-form-select>                                 \r\n                      </div>\r\n                    </div>   \r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Passport Number:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizenpassport\"\r\n                            v-model=\"passportnumberprop\"\r\n                            ref=\"pcitizenpassport\"\r\n                            trim\r\n                            maxlength=\"15\"\r\n                            size=\"sm\" \r\n                            :state=\"passportnumberstate\" \r\n                            aria-describedby=\"input-live-feedback-passport-number\"\r\n                        ></b-form-input>            \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-passport-number\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                \r\n                      </div>         \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Expires:</label>    \r\n                        <datepicker v-model=\"passportexprdtprop\" class=\"dp\"  format=\"MM/dd/yyyy\" :clear-button=\"true\"></datepicker>                        \r\n                      </div>      \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Citizenship Country:</label>                                                 \r\n                        <b-form-select id=\"pcitizenpassportcountry\" ref=\"pcitizenpassportcountry\" v-model=\"passportcountryprop\" size=\"sm\" >              \r\n                            <option v-for=\"country in isocountries\" :value=\"country.AlphaThreeCode\" :key=\"country.AlphaThreeCode\" >{{country.AlphaThreeCode}}&nbsp;-&nbsp;({{country.CountryName}})</option>\r\n                        </b-form-select>                             \r\n                      </div>\r\n                    </div>  \r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Visa Number:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizenvisa\"\r\n                            v-model=\"visanumberprop\"\r\n                            ref=\"pcitizenvisa\"\r\n                            trim\r\n                            maxlength=\"15\"\r\n                            size=\"sm\" \r\n                            :state=\"visanumberstate\" \r\n                            aria-describedby=\"input-live-feedback-visa-number\"\r\n                        ></b-form-input>    \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-visa-number\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                     \r\n                      </div>         \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Expires:</label>    \r\n                        <datepicker v-model=\"visaexprdtprop\" class=\"dp\"  format=\"MM/dd/yyyy\" :clear-button=\"true\"></datepicker>                        \r\n                      </div>      \r\n                      <div class=\"col\">                        \r\n                        <label class=\"lbldetail\">Visa Type:</label>    \r\n                        <b-form-input\r\n                            id=\"pcitizenvisatype\"\r\n                            v-model=\"visatypeprop\"\r\n                            ref=\"pcitizenvisatype\"\r\n                            trim\r\n                            maxlength=\"2\"\r\n                            size=\"sm\" \r\n                            :state=\"visatypestate\" \r\n                            aria-describedby=\"input-live-feedback-visa-type\"\r\n                        ></b-form-input>    \r\n                        <b-form-invalid-feedback id=\"input-live-feedback-visa-type\">\r\n                          May not contain special characters\r\n                        </b-form-invalid-feedback>                            \r\n                      </div>\r\n                    </div> \r\n                    </div>  \r\n\r\n                    <div class=\"topdetail\">\r\n                    <div class=\"lblTitleRow\">EEO Data</div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col\"><label class=\"lbldetail\">Gender:</label>                \r\n                      <b-form-select id=\"inpgenders\" ref=\"inpgenders\" v-model=\"genderprop\" size=\"sm\" >      \r\n                          <option value=\"\" >&nbsp;</option>        \r\n                          <option v-for=\"gender in genders\" :value=\"gender.value\" :key=\"gender.value\" >{{gender.type}}&nbsp;({{gender.value}})</option>\r\n                      </b-form-select>   \r\n                      </div>  \r\n                      <div class=\"col\"><label class=\"lbldetail\">Race:</label>                \r\n                      <b-form-select id=\"inpraceethni\" ref=\"inpraceethni\" v-model=\"raceethnicityprop\" size=\"sm\" >     \r\n                          <option value=\"\" >&nbsp;</option>         \r\n                          <option v-for=\"raceethnicity in raceethnicitylist\" :value=\"raceethnicity.ADPValue\" :key=\"raceethnicity.ADPValue\" >{{raceethnicity.TypeVal}}</option>\r\n                      </b-form-select>   \r\n                      </div>\r\n                      <div class=\"col\"><label class=\"lbldetail\">Marital Status:</label>                \r\n                      <b-form-select id=\"inpmaritalstatus\" ref=\"inpmaritalstatus\" v-model=\"maritalstatusprop\" size=\"sm\" >     \r\n                          <option value=\"\" >&nbsp;</option>         \r\n                          <option v-for=\"maritalstatus in fedmaritalstatus.filter(marit => marit.ADPValue !== 'F')\" :value=\"maritalstatus.ADPValue\" :key=\"maritalstatus.ADPValue\" >{{maritalstatus.TypeDesc}}</option>\r\n                      </b-form-select>   \r\n                      </div>\r\n                      <div class=\"col\"><label class=\"lbldetail\">Disabled:</label>             \r\n                        <b-form-checkbox id=\"inpdisabledid\" ref=\"inpdisabledid\" v-model=\"disabledprop\" name=\"check-button\" switch>\r\n                          Disabled\r\n                        </b-form-checkbox>\r\n                      </div>\r\n                    </div> \r\n                    </div>                        \r\n            </div>\r\n        </b-col>  \r\n        </b-row>  \r\n      </b-modal>\r\n      \r\n      <b-modal id=\"bv-modal-companies\" title=\"Company Selector\" size=\"sm\" @ok=\"selectCompany\">\r\n        <div class=\"row\"> \r\n          <div class=\"col\"> \r\n                <b-form-select id=\"inpcompanies\" ref=\"inpcompanies\" v-model=\"companypropselectval\" size=\"sm\" >              \r\n                  <option v-for=\"company in companies\" :value=\"company.CompanyCode\" :key=\"company.CompanyCode\" >{{company.CompanyName}}&nbsp;({{company.CompanyIdentifier}})</option>\r\n                </b-form-select>    \r\n          </div>      \r\n        </div>  \r\n      </b-modal>\r\n      \r\n      <b-modal id=\"bv-modal-qualify\" title=\"Qualify Confirmation\" size=\"sm\" @ok=\"qualifyDriver\" @cancel=\"cancelDriverQualify\">\r\n        <div class=\"row\"> \r\n          <div class=\"col\"> \r\n            <span>Are you sure you want to qualify this driver and remove it from your list?</span>\r\n          </div>      \r\n        </div>  \r\n      </b-modal>\r\n      \r\n      <b-modal id=\"bv-modal-disqualify\" :title=\"(typeofqualification == 'S'?'Disqualify Confirmation':'Deactivate Confirmation')\" size=\"sm\" @ok=\"disqualifyDriver\" @cancel=\"cancelDriverQualify\">\r\n        <div class=\"row\"> \r\n          <div class=\"col\"> \r\n            <span>{{(typeofqualification == 'S'?'Are you sure you want to disqualify this prospect and stop processing?':'Are you sure you want to deactivate this prospect and remove it from your list?')}}</span>\r\n          </div>      \r\n        </div>  \r\n      </b-modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Datepicker from 'vuejs-datepicker';\r\nimport apiurl from '../config/production';\r\nimport adpapiurl from '../config/adpendpoint';\r\nimport addressee from './Address.vue';\r\nimport phone from './Phone.vue';\r\nimport email from './Email.vue';\r\nimport wfour from './WFourTaxes.vue';\r\nimport emergencycontact from './EmergencyContact.vue';\r\nimport {bus} from '../main';\r\nvar bunyan = require('bunyan');\r\nvar log = bunyan.createLogger({name: \"Enlist_App_DetailView\"});\r\nvar apival = apiurl();\r\nvar adpapival = adpapiurl();\r\n\r\nexport default {\r\n  name: 'DetailModal',  \r\n  components: {\r\n    Datepicker,\r\n    addressee,\r\n    phone,\r\n    email ,\r\n    emergencycontact,\r\n    wfour\r\n  },\r\n  props: {\r\n      id:String,\r\n      entityid:String,\r\n      drivercode:String,\r\n      modaltitle:String,\r\n      approvalid:String,\r\n      name:String,\r\n      lmsid:String,\r\n      firstname:String,\r\n      lastname:String,\r\n      middlename:String,\r\n      preferedname:String,\r\n      namesuffix:String,\r\n      nameprefix:String,\r\n      homephone:String,\r\n      emailaddressone:String,\r\n      emailaddresstwo:String,   \r\n      streetone:String,\r\n      streettwo:String,\r\n      streetthree:String,\r\n      city:String,\r\n      state:String,\r\n      zip:String,\r\n      country:String,\r\n      streetoneother:String,\r\n      streettwoother:String,\r\n      streetthreeother:String,\r\n      cityother:String,\r\n      stateother:String,\r\n      countryother:String,\r\n      zipother:String,\r\n      ssn:String,\r\n      sin:String,\r\n      formername:String,\r\n      gender:String,\r\n      ethnicgroup:String,\r\n      usworkeligible:String,\r\n      disabledvet:String,\r\n      disabled:String,\r\n      militarystat:String,\r\n      militarydischargedt:String,\r\n      maritalstatus:String,\r\n      maritalstatusdt:String,\r\n      birthdate:String,\r\n      birthplace:String,\r\n      highesteducationlvl:String,\r\n      citizenshipstatus:String,\r\n      visanumber:String,\r\n      visaexprdt:String,\r\n      visatype:String,\r\n      passportnumber:String,\r\n      passportexprdt:String,\r\n      passportcountry:String,\r\n      citizenproofone:String,\r\n      citizenprooftwo:String,\r\n      citizenproofthree:String,\r\n      citizencountryone:String,\r\n      citizencountrytwo:String,\r\n      citizencountrythree:String,\r\n      smoker:String,\r\n      accomodationrequest:String,\r\n      disabilitytype:String,   \r\n      raceethnicity:String,\r\n      residencedt:String,\r\n      proofexpiredtone:String,\r\n      proofexpiredttwo:String,\r\n      proofexpiredtthree:String,\r\n      readyforadp:Number,\r\n      ismanualentry:Boolean,\r\n      fleetsreviewedby:String,\r\n      fleetsreviewedon:String,\r\n      fleetsverfied:Number,\r\n      safetyreviewedby:String,\r\n      safetyreviewedon:String,\r\n      safetyqualified:Number,\r\n      payrollreviewedby:String,\r\n      payrollreviewedon:String,\r\n      payrollaudited:Number,\r\n      effdt:String,\r\n      adusername:String,\r\n      deptid: String,\r\n      terminal: String,\r\n      terminalsuper: String,\r\n      division: String,\r\n      comprate: String,\r\n      compfrequency: String,\r\n      jobcode: String,\r\n      homedept: String,\r\n      hourlyrate: String,\r\n      location:String,\r\n      title:String,\r\n      supervisorid:String,\r\n      ft:Boolean,\r\n      makeToast: Function,  \r\n      camelize: Function,\r\n      fixNull: Function,\r\n      hideloadingmodal: Function,\r\n      showloadingmodal: Function,\r\n      containsSpecialCharacters: Function,\r\n      typeofqualification:String,\r\n      sendtoadp: String\r\n  },\r\n  data() {\r\n    return {\r\n      ssnpropval:'',\r\n      drivercodepropval: '',\r\n      firstnamepropval: '',\r\n      middlenamepropval: '',\r\n      lastnamepropval: '',\r\n      namepropval:'',\r\n      preferednamepropval:'',\r\n      birthdatepropval:'',\r\n      effdtpropval:'',\r\n      terminapropval:'',\r\n      terminalsuperpropval:'',\r\n      terminals:[],      \r\n      terminalmanagers:[],      \r\n      divisionpropval:'',\r\n      divisions:[],\r\n      sui:'',\r\n      costcenter:'',\r\n      costcenterdesc:'',\r\n      costcenters:[],\r\n      frequencies:[],\r\n      companypropval:'',\r\n      companypropclassval:'',\r\n      companypropselectval:'',\r\n      companies:[],\r\n      suicodes:[],\r\n      suicodesdist:[],\r\n      compratepropval:'',\r\n      compfrequencypropval:'',      \r\n      hourlyratepropval: '',\r\n      states:[],\r\n      countries:[],\r\n      deptidpropval:'',\r\n      ftpropval:'',\r\n      runupdate:true,\r\n      fleetsqualifypropval:'',\r\n      safetyqualifypropval:'',\r\n      payrollqualifypropval:'',    \r\n      qualifypropval:'',\r\n      qualifyoptions: [\r\n        { text: 'None', value: '0' },\r\n        { text: 'Qualify', value: '1' },\r\n        { text: 'Disqualify', value: '2' }\r\n      ],\r\n      payrollqualifyoptions: [\r\n        { text: 'None', value: '0' },\r\n        { text: 'ADP', value: '1' },\r\n        { text: 'Deactivate', value: '2' }\r\n      ],\r\n      phonetypes:[],    \r\n      phonenumbers:[],  \r\n      phonedirectload:false,     \r\n      relationshiptypes:[], \r\n      emergencycontact:[], \r\n      wfour:[], \r\n      statetaxcodes:[], \r\n      fedmaritalstatus:[], \r\n      statemaritalstatus:[],\r\n      citizenproofonepropval:'',\r\n      citizenprooftwopropval:'',\r\n      citizenproofthreepropval:'',\r\n      proofexpiredtonepropval:'',\r\n      proofexpiredttwopropval:'',\r\n      proofexpiredtthreepropval:'',\r\n      citizencountryonepropval:'',\r\n      citizencountrytwopropval:'',\r\n      citizencountrythreepropval:'',\r\n      passportnumberpropval:'',\r\n      passportexprdtpropval:'',\r\n      passportcountrypropval:'',\r\n      visanumberpropval:'',\r\n      visaexprdtpropval:'',\r\n      visatypepropval:'',\r\n      genders:[\r\n        {\r\n          'type': 'Male',\r\n          'value': 'M'\r\n        },\r\n        {\r\n          'type': 'Female',\r\n          'value': 'F'\r\n        }\r\n      ],\r\n      genderpropval:'',\r\n      raceethnicitylist:[],\r\n      raceethnicitypropval:'',\r\n      maritalstatuspropval:'',\r\n      disabledpropval:'',\r\n      isocountries:[],\r\n      companyid: 0,\r\n      homedeptpropval:'',\r\n      sendtoadppropval:''\r\n    };\r\n  },\r\n  updated: function () {\r\n    this.$nextTick(function () {\r\n    })\r\n  },\r\n  mounted:function(){\r\n      var self = this;\r\n      this.loadStaticData();\r\n      bus.$on('GetPhoneData', function (payLoad) {\r\n        self.getphones(payLoad);\r\n      });\r\n      bus.$on('GetEmergencyContactData', function (payLoad) {\r\n        self.getemergencycontact(payLoad);\r\n      });\r\n      bus.$on('GetWFourData', function(payLoad) {      \r\n        self.getwfourdata(payLoad);\r\n      });\r\n      \r\n      bus.$on('UpdatewfourRowData', function(payLoad) {              \r\n        if(self.sendtoadpprop == \"SENDING\" && payLoad) {          \r\n          setTimeout(function() {\r\n            self.submittoadp();\r\n            self.makeToast(\"Submitting to ADP\", \"Driver detail is being sent to ADP\", \"info\");            \r\n          }, 2000);\r\n        }\r\n      });\r\n  },  \r\n  computed: {\r\n    ssnState: function() {\r\n      var chkstate = (this.ssnprop.length == 0  || this.ssnprop.length == 9);\r\n      if(chkstate){\r\n        chkstate = !isNaN(this.ssnprop);        \r\n      }\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(chkstate) {\r\n          chkstate = !this.containsSpecialCharacters(this.ssnprop);\r\n        }\r\n      }\r\n      return chkstate;\r\n    },\r\n    ssnprop:  {      \r\n      get: function() { \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.ssnpropval = this.ssn;\r\n        }\r\n        return self.ssnpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.ssnpropval = newValue;\r\n      }      \r\n    },\r\n    drivercodeState: function() {\r\n      var chkstate = (this.drivercodeprop.length == 0  || this.drivercodeprop.length >= 3);\r\n      if (typeof this.containsSpecialCharacters === \"function\") {       \r\n        if(chkstate) {\r\n          chkstate = !this.containsSpecialCharacters(this.drivercodeprop);\r\n        }\r\n      }\r\n      return chkstate;\r\n    },\r\n    drivercodeprop:  {      \r\n      get: function() {  \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.drivercodepropval = this.drivercode;\r\n        }\r\n        return self.drivercodepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.drivercodepropval = newValue;\r\n      }      \r\n    },\r\n    firstnameprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.firstnamepropval = this.firstname;\r\n        }\r\n        return self.firstnamepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.firstnamepropval = newValue;\r\n      }      \r\n    },\r\n    middlenameprop:  {      \r\n      get: function() {    \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.middlenamepropval = this.middlename;\r\n        }\r\n        return self.middlenamepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.middlenamepropval = newValue;\r\n      }      \r\n    },\r\n    middlenameState: function() {\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.middlenameprop);\r\n      }\r\n      return true;\r\n    },\r\n    lastnameprop:  {      \r\n      get: function() {   \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.lastnamepropval = this.lastname;\r\n        }\r\n        return self.lastnamepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.lastnamepropval = newValue;\r\n      }      \r\n    },\r\n    preferednameprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.preferednamepropval = this.preferedname;        \r\n        }\r\n        return self.preferednamepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.preferednamepropval = newValue;\r\n      }      \r\n    },\r\n    birthdateprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.birthdatepropval = this.birthdate;\r\n        }\r\n        return self.birthdatepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.birthdatepropval = newValue;\r\n      }      \r\n    },    \r\n    homedeptprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.homedeptpropval = this.homedept;\r\n        }\r\n        return self.homedeptpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.homedeptpropval = newValue;\r\n      }   \r\n    },\r\n    costcenterState: function() {\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.homedeptprop);\r\n      }\r\n      return true;\r\n    },\r\n    citizenproofoneprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizenproofonepropval = this.citizenproofone;\r\n        }\r\n        return self.citizenproofonepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizenproofonepropval = newValue;\r\n      }   \r\n    },\r\n    citizenproofonestate: function() {\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.citizenproofoneprop);\r\n      }\r\n      return true;\r\n    },\r\n    citizenprooftwoprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizenprooftwopropval = this.citizenprooftwo;\r\n        }\r\n        return self.citizenprooftwopropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizenprooftwopropval = newValue;\r\n      }   \r\n    },\r\n    citizenprooftwostate: function() {      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.citizenprooftwoprop);\r\n      }\r\n      return true;\r\n    },\r\n    citizenproofthreeprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizenproofthreepropval = this.citizenproofthree;\r\n        }\r\n        return self.citizenproofthreepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizenproofthreepropval = newValue;\r\n      }   \r\n    },\r\n    citizenproofthreestate: function() {      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.citizenproofthreeprop);\r\n      }\r\n      return true;\r\n    },\r\n    proofexpiredtoneprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.proofexpiredtonepropval = this.proofexpiredtone;\r\n        }\r\n        return self.proofexpiredtonepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.proofexpiredtonepropval = newValue;\r\n      }   \r\n    },\r\n    proofexpiredttwoprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.proofexpiredttwopropval = this.proofexpiredttwo;\r\n        }\r\n        return self.proofexpiredttwopropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.proofexpiredttwopropval = newValue;\r\n      }   \r\n    },\r\n    proofexpiredtthreeprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.proofexpiredtthreepropval = this.proofexpiredtthree;\r\n        }\r\n        return self.proofexpiredtthreepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.proofexpiredtthreepropval = newValue;\r\n      }   \r\n    },\r\n    citizencountryoneprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizencountryonepropval = this.citizencountryone;\r\n        }\r\n        return self.citizencountryonepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizencountryonepropval = newValue;\r\n      }   \r\n    },\r\n    citizencountrytwoprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizencountrytwopropval = this.citizencountrytwo;\r\n        }\r\n        return self.citizencountrytwopropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizencountrytwopropval = newValue;\r\n      }   \r\n    },\r\n    citizencountrythreeprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.citizencountrythreepropval = this.citizencountrythree;\r\n        }\r\n        return self.citizencountrythreepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.citizencountrythreepropval = newValue;\r\n      }   \r\n    },\r\n    passportnumberprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.passportnumberpropval = this.passportnumber;\r\n        }\r\n        return self.passportnumberpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.passportnumberpropval = newValue;\r\n      }   \r\n    },\r\n    passportnumberstate: function() {      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.passportnumberprop);\r\n      }\r\n      return true;\r\n    },\r\n    passportexprdtprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.passportexprdtpropval = this.passportexprdt;\r\n        }\r\n        return self.passportexprdtpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.passportexprdtpropval = newValue;\r\n      }   \r\n    },\r\n    passportcountryprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.passportcountrypropval = this.passportcountry;\r\n        }\r\n        return self.passportcountrypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.passportcountrypropval = newValue;\r\n      }   \r\n    },\r\n    visanumberprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.visanumberpropval = this.visanumber;\r\n        }\r\n        return self.visanumberpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.visanumberpropval = newValue;\r\n      }   \r\n    },\r\n    visanumberstate: function() {      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.visanumberprop);\r\n      }\r\n      return true;\r\n    },\r\n    visaexprdtprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.visaexprdtpropval = this.visaexprdt;\r\n        }\r\n        return self.visaexprdtpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.visaexprdtpropval = newValue;\r\n      }   \r\n    },\r\n    visatypeprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.visatypepropval = this.visatype;\r\n        }\r\n        return self.visatypepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.visatypepropval = newValue;\r\n      }   \r\n    },    \r\n    visatypestate: function() {      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.visatypeprop);\r\n      }\r\n      return true;\r\n    },\r\n    genderprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.genderpropval = this.gender;\r\n        }\r\n        return self.genderpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.genderpropval = newValue;\r\n      }   \r\n    },\r\n    raceethnicityprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.raceethnicitypropval = this.raceethnicity;\r\n        }\r\n        return self.raceethnicitypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.raceethnicitypropval = newValue;\r\n      }   \r\n    },\r\n    maritalstatusprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.maritalstatuspropval = this.maritalstatus;\r\n        }\r\n        return self.maritalstatuspropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.maritalstatuspropval = newValue;\r\n      }   \r\n    },\r\n    disabledprop: { \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.disabledpropval = this.disabled;\r\n          self.disabledpropval = (self.disabledpropval.toLowerCase() == 'y'?true:false);\r\n        }\r\n        return self.disabledpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.disabledpropval = newValue;\r\n      }   \r\n    },\r\n    effdtprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.effdtpropval = this.effdt;\r\n        }\r\n        return self.effdtpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.effdtpropval = newValue;\r\n      }      \r\n    },\r\n    nameprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.namepropval = this.name;          \r\n        } else {\r\n           self.namepropval = self.lastnameprop +','+ self.firstnameprop + (self.middlenameprop.length>0?' '+ self.middlenameprop:'');\r\n        }\r\n        return self.namepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.namepropval = newValue;\r\n      }      \r\n    },\r\n    companypropclass:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.companypropclassval = this.deptid.trim();\r\n          self.companypropselectval = this.deptid.trim();\r\n        }\r\n        return self.companypropclassval;\r\n      },\r\n      set: function(newValue) {\r\n        this.companypropclassval = newValue;\r\n      }      \r\n    },\r\n    nameState: function() {\r\n      var chkstate = (this.drivercodepropval.length == 0  || this.drivercodepropval.length > 3);      \r\n      return chkstate;\r\n    }, \r\n    terminaprop:  {      \r\n      get: function() {  \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.terminapropval = this.terminal.trim();\r\n        }\r\n        return self.terminapropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.terminapropval = newValue;\r\n      }      \r\n    },  \r\n    terminalsuperprop:  {      \r\n      get: function() { \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.terminalsuperpropval = this.terminalsuper;\r\n          self.assignTerminalManager(this.terminaprop);\r\n        }\r\n        return self.terminalsuperpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.terminalsuperpropval = newValue;\r\n      }      \r\n    }, \r\n    deptidprop: {\r\n      get: function() {     \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.deptidpropval = this.deptid.trim();\r\n        }\r\n        return self.deptidpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.deptidpropval = newValue;\r\n      }    \r\n    },\r\n    divisionprop:  {      \r\n      get: function() {   \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.divisionpropval = this.division;\r\n          //self.assignSUICodes();\r\n        }\r\n        return this.divisionpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.divisionpropval = newValue;\r\n        //this.assignSUICodes();\r\n      }      \r\n    },\r\n    comprateprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.compratepropval = this.comprate;\r\n        }\r\n        return self.compratepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.compratepropval = newValue;\r\n      }      \r\n    },\r\n    compfrequencyprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.compfrequencypropval = this.compfrequency;\r\n        }\r\n        return self.compfrequencypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.compfrequencypropval = newValue;\r\n      }      \r\n    },\r\n    hourlyrateprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.hourlyratepropval = this.hourlyrate;\r\n        }\r\n        return self.hourlyratepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.hourlyratepropval = newValue;\r\n      }      \r\n    },\r\n    ftprop:  {      \r\n      get: function() {\r\n        var self = this;\r\n        self.ftpropval = this.ft;\r\n        return self.ftpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.ftpropval = newValue;\r\n      }      \r\n    },\r\n    fleetsqualifyprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.fleetsqualifypropval = this.ft;\r\n        }\r\n        return self.fleetsqualifypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.fleetsqualifypropval = newValue;\r\n      }      \r\n    },\r\n    safetyqualifyprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.safetyqualifypropval = this.safetyqualified;\r\n        }\r\n        return self.safetyqualifypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.safetyqualifypropval = newValue;\r\n      }      \r\n    },\r\n    payrollqualifyprop:  {      \r\n      get: function() {    \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.payrollqualifypropval = this.payrollaudited;\r\n        }\r\n        return self.payrollqualifypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.payrollqualifypropval = newValue;\r\n      }      \r\n    },    \r\n    qualifyprop:  {      \r\n      get: function() {\r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.qualifypropval = (this.safetyqualifyprop>0 && this.safetyqualifyprop!==2?this.payrollqualifyprop:this.safetyqualifyprop);\r\n        }        \r\n        if(self.typeofqualification == \"S\") {\r\n          return self.safetyqualifyprop;\r\n        } else if(self.typeofqualification == \"P\") {\r\n          return self.payrollqualifyprop;\r\n        }\r\n        return self.qualifypropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.qualifypropval = newValue;\r\n      }      \r\n    },\r\n    phonerowone: function() {\r\n      var arry = new Array;\r\n      if(this.phonetypes){\r\n      if(this.phonetypes.length > 0){\r\n        var i = 0;\r\n        for(i=0;i<4;i++){        \r\n          arry.push(this.phonetypes[i]);\r\n        }\r\n      }\r\n      }\r\n      return arry;\r\n    },\r\n    phonerowtwo: function() {\r\n      var arry = new Array;      \r\n      if(this.phonetypes){\r\n        if(this.phonetypes.length > 0){\r\n          var i = 0;\r\n          for(i=0;i<this.phonetypes.length;i++){  \r\n            if(i>3){\r\n              arry.push(this.phonetypes[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return arry;\r\n    },\r\n    firstnamestate: function(){\r\n      var isvalid = !!this.firstnameprop; \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(isvalid) {\r\n          isvalid = !this.containsSpecialCharacters(this.firstnameprop);\r\n        }\r\n      }\r\n      return isvalid;\r\n    },\r\n    lastnamestate: function(){\r\n      var isvalid = !!this.lastnameprop;\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(isvalid) {\r\n          isvalid = !this.containsSpecialCharacters(this.lastnameprop);\r\n        }\r\n      }\r\n      return isvalid;\r\n    },\r\n    preferrednameState: function(){\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        return !this.containsSpecialCharacters(this.preferednameprop);\r\n      }\r\n      return true;\r\n    },\r\n    compratestate: function(){\r\n      var isvalid = !!this.comprateprop && !isNaN(this.comprateprop);\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(isvalid) {\r\n          isvalid = !this.containsSpecialCharacters(this.comprateprop);\r\n        }\r\n      }\r\n      return isvalid;\r\n    },\r\n    hourlyratestate: function(){\r\n      var isvalid = !!this.hourlyrateprop && !isNaN(this.hourlyrateprop);      \r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(isvalid) {\r\n          isvalid = !this.containsSpecialCharacters(this.hourlyrateprop);\r\n        }\r\n      }\r\n      return isvalid;\r\n    },    \r\n    sendtoadpprop:  {      \r\n      get: function() { \r\n        var self = this;  \r\n        if(self.ft){ \r\n          self.sendtoadppropval = this.sendtoadp;\r\n        }\r\n        return self.sendtoadppropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.sendtoadppropval = newValue;\r\n      }      \r\n    },\r\n  },\r\n  methods:{\r\n    trimValues: function(valuetotrim){\r\n      return valuetotrim.trim();\r\n    },\r\n    assignSUICodes: function() {\r\n      var self = this;\r\n      var foundme = false;\r\n      if(self.divisionpropval.trim().toLowerCase() !== 'ddf'){\r\n        self.suicodes.forEach(function(sui) {\r\n          if(sui.Division == self.divisionpropval &&\r\n            sui.CompanyCode == self.deptid) {\r\n            self.sui = sui.SUICode;\r\n            foundme = true;\r\n          }\r\n        });\r\n        if(foundme == false){\r\n          self.sui = '47';\r\n        }      \r\n        foundme = false;\r\n        self.costcenters.forEach(function(costcent) {\r\n          if(costcent.DivCd == self.divisionpropval) {\r\n            self.costcenter = costcent.CstCtr;\r\n            self.costcenterdesc = costcent.CstCtrDesc;\r\n            foundme = true;\r\n          }\r\n        });\r\n        if(foundme == false){\r\n          self.divisions.forEach(function(division) {\r\n            if(division.DIVCDE == self.divisionpropval) {\r\n              self.companyid  = (division.DIVCO == 'TCC'?2:1);\r\n            }\r\n          });\r\n          if(self.companyid == 2){\r\n            self.costcenter = '800';\r\n            self.costcenterdesc = 'SHAF NATIONAL OTR RDO21/28/45';\r\n          }else {\r\n            self.costcenter = '100';\r\n            self.costcenterdesc = 'CRETE NATIONAL OTR RDO21/28/45';\r\n          }\r\n        } \r\n      } else {\r\n          if(self.companypropclass == '1110') {\r\n            self.sui = '47';\r\n            self.costcenter = '117';\r\n            self.costcenterdesc = 'CRETE - DDF DRIVERS';\r\n          } else if(self.companypropclass == '2101') {\r\n            self.sui = '47';\r\n            self.costcenter = '817';\r\n            self.costcenterdesc = 'SHAFFER - DDF DRIVERS';\r\n          }\r\n      }     \r\n    },\r\n    termChange: function(event){\r\n      this.assignTerminalManager(event);\r\n    },\r\n    assignTerminalManager: function(terminal){\r\n      var self = this;\r\n      self.terminalsuperprop = '';\r\n      this.terminalmanagers.forEach(function(tman) {\r\n        if(tman.CODE == terminal) {\r\n          var midnm = '';\r\n          if(tman.MIDDLNAME){\r\n            if(tman.MIDDLNAME.length > 0){\r\n              midnm = tman.MIDDLNAME.trim();\r\n            }\r\n          }\r\n          self.terminalsuperprop = tman.LASTNAME.trim() +', '+ tman.FIRSTNAME.trim() + midnm;\r\n        }\r\n      });\r\n      if(!self.ftprop){\r\n        if(terminal.trim().toLowerCase() == 'ddf') {\r\n          self.divisionprop = 'DDF';\r\n        }\r\n      }\r\n    },\r\n    divChange: function(event){\r\n      this.divisionprop = event;\r\n      //this.assignSUICodes();\r\n    },\r\n    handleCompanyImageClick: function() {    \r\n       this.companypropselectval = this.companypropclassval;\r\n      if(this.companypropclassval !== '1110' && this.companypropclassval !== '2101') {\r\n        this.companypropselectval = '';\r\n      }      \r\n      \r\n      this.$bvModal.show(\"bv-modal-companies\");\r\n      return false;   \r\n    },\r\n    handleDataUpdate: function(bvModalEvt){      \r\n      bvModalEvt.preventDefault();\r\n      this.dataUpdate();\r\n    },\r\n    dataUpdate: function(){      \r\n      var self = this;\r\n      const formisvalid = self.ssnState && self.drivercodeState && self.firstnamestate && self.lastnamestate && self.compratestate && self.hourlyratestate;\r\n      if(formisvalid) { \r\n        self.makeToast(\"Data Saving\", \"Attempting to your save data\", \"info\");\r\n        var jsonvals = JSON.stringify({\r\n              data: {\r\n                'entityid':self.entityid,    \r\n                'lmsid':self.lmsid,       \r\n                'deptid':(self.title.toLowerCase() == 'assoc'?self.terminaprop:self.companypropselectval),         \r\n                'drivercode':self.drivercodeprop,    \r\n                'ssn':self.ssnprop,\r\n                'name':self.nameprop,\r\n                'firstname':self.firstnameprop,\r\n                'lastname':self.lastnamepropval,\r\n                'middlename':self.middlenameprop,\r\n                'preferedname':self.preferednameprop,\r\n                'birthdate':self.birthdateprop,\r\n                'effdt':self.effdtprop,\r\n                'terminal':self.terminaprop,\r\n                'division':self.divisionprop,\r\n                'sui':self.sui,\r\n                'costcenter':self.costcenter,\r\n                'comprate':self.comprateprop,\r\n                'compfrequency':self.compfrequencyprop,\r\n                'homedept':self.homedeptprop,\r\n                'hourlyrate':self.hourlyrateprop,              \r\n                'location':(self.title.toLowerCase() == 'assoc'?self.terminaprop:self.location),\r\n                'title':(self.title.toLowerCase() == 'assoc'?'assoc':self.terminaprop),\r\n              }\r\n            });\r\n        fetch(apival+'enlistapi/updatepersonaldata', {\r\n            method: 'Post',\r\n            credentials: 'include',\r\n            body:jsonvals,\r\n            headers:{\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }).then(function(response) {\r\n            return response.json();\r\n          }).then(function(jsonret) {          \r\n            var resu = jsonret.data;\r\n            if(resu == 'SUCCESS'){          \r\n              self.makeToast(\"Personal Info Saved\", \"Personal info saved successfully.\", \"success\");\r\n              self.runupdate = true;\r\n              bus.$emit('submitsave');\r\n              self.$emit(\"updaterowdata\",  jsonvals); \r\n            }\r\n          }).catch(function(err) {\r\n              self.sendtoadpprop = \"\";\r\n              log.error('enlistapi/updatepersonaldata'+err); \r\n          });\r\n      } else {\r\n        self.sendtoadpprop = \"\";\r\n        self.makeToast('Personal Data', 'Please correct any errors identified on the form to continue.', \"danger\");\r\n        //self.$bvModal.show(\"bv-modal-errors\");\r\n      }\r\n\r\n      if(self.safetyqualified == 1){\r\n        //Save i9\r\n        var jsonvalsinine = JSON.stringify({\r\n              data: {\r\n                'entityid':self.entityid,    \r\n                'lmsid':self.lmsid,          \r\n                'citizenproofone':self.citizenproofoneprop,    \r\n                'citizenprooftwo':self.citizenprooftwoprop,\r\n                'citizenproofthree':self.citizenproofthreeprop,\r\n                'citizencountryone':self.citizencountryoneprop,\r\n                'citizencountrytwo':self.citizencountrytwoprop,\r\n                'citizencountrythree':self.citizencountrythreeprop,\r\n                'proofexpiredtone':self.proofexpiredtoneprop,\r\n                'proofexpiredttwo':self.proofexpiredttwoprop,\r\n                'proofexpiredtthree':self.proofexpiredtthreeprop,\r\n                'passportnumber':self.passportnumberprop,\r\n                'passportexprdt':self.passportexprdtprop,\r\n                'passportcountry':self.passportcountryprop,\r\n                'visanumber':self.visanumberprop,\r\n                'visaexprdt':self.visaexprdtprop,\r\n                'visatype':self.visatypeprop,\r\n                'gender':self.genderprop,\r\n                'raceethnicity':self.raceethnicityprop,\r\n                'maritalstatus':self.maritalstatusprop,\r\n                'disabled':(self.disabledprop == true?'Y':'N')\r\n              }\r\n            });\r\n        fetch(apival+'enlistapi/updateininedata', {\r\n            method: 'Post',\r\n            credentials: 'include',\r\n            body:jsonvalsinine,\r\n            headers:{\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n        }).then(function(response) {\r\n          return response.json();\r\n        }).then(function(jsonret) {          \r\n          var resu = jsonret.data;\r\n          if(resu == 'SUCCESS'){          \r\n            //self.makeToast(\"i9 Info Saved\", \"i9 info saved successfully.\", \"success\");\r\n            self.runupdate = true;\r\n            self.$emit(\"updateininerowdata\",  jsonvalsinine); \r\n          }\r\n        }).catch(function(err) {\r\n            self.sendtoadpprop = \"\";\r\n            log.error('enlistapi/updateininedata'+err); \r\n        });\r\n      }\r\n    },\r\n    selectCompany: function() {\r\n      this.companypropclass = this.companypropselectval;\r\n    },\r\n    changeQualification: function(event) {\r\n      if(event){\r\n        if(event == 1) {\r\n          this.$bvModal.show(\"bv-modal-qualify\");\r\n        } else if(event == 2) {\r\n          this.$bvModal.show(\"bv-modal-disqualify\");\r\n        }\r\n      }\r\n    },\r\n    qualifyDriver: function(){\r\n      if(this.typeofqualification == \"S\") {\r\n        this.safetyqualifyprop = 1;\r\n      } else if(this.typeofqualification == \"P\") {\r\n        this.payrollqualifyprop = 1;\r\n      }\r\n      this.qualifyDriverUpdate(1);\r\n    },\r\n    disqualifyDriver: function(){\r\n      if(this.typeofqualification == \"S\") {\r\n        this.safetyqualifyprop = 2;\r\n      } else if(this.typeofqualification == \"P\") {\r\n        this.payrollqualifyprop = 2;\r\n      }\r\n      this.qualifyDriverUpdate(2);\r\n    },\r\n    qualifyDriverUpdate: function(updateType){\r\n      var self = this;\r\n      self.showloadingmodal();\r\n      var jsonvals = JSON.stringify({\r\n        'data': {\r\n          'entityid':self.entityid,    \r\n          'lmsid':self.lmsid,       \r\n          'qualifystatus':self.qualifyprop,         \r\n          'typeofupdate':self.typeofqualification\r\n        }\r\n      });\r\n      fetch(apival+'enlistapi/approvelineitem', {\r\n          method: 'Post',\r\n          credentials: 'include',\r\n          body:jsonvals,\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        var resu = jsonret.data;\r\n        if(resu == 'SUCCESS'){          \r\n          if(updateType == 1) {\r\n            self.$emit(\"updatequalifyrowdata\");             \r\n             if(self.typeofqualification == \"P\") {\r\n              //self.makeToast(\"Submit to ADP\", \"Please subit through old AppCentral.\", \"danger\");\r\n              //bus.$emit('populatedata');\r\n              //bus.$emit('submittoadp');\r\n              self.sendtoadpprop = \"SENDING\";\r\n              self.dataUpdate();\r\n            } else {              \r\n              self.makeToast(\"Driver Qualified\", \"Driver qaulified successfully.\", \"success\");\r\n            }\r\n          }else{\r\n            var typeofevent = (self.typeofqualification == \"P\"?'Deactivated':'Disqualified');                   \r\n            if(self.typeofqualification == \"P\") {\r\n              self.$emit(\"updatequalifyrowdata\");   \r\n            } else if(self.typeofqualification == \"S\") {\r\n              self.$emit(\"updatedisqualifyrowdata\"); \r\n            }\r\n            self.makeToast(\"Driver \"+typeofevent, \"Driver \"+typeofevent.toLowerCase()+\" successfully.\", \"success\");\r\n          }\r\n        }\r\n        self.hideloadingmodal();\r\n      }).catch(function(err) {\r\n        log.error('enlistapi/approvelineitem'+err); \r\n        self.hideloadingmodal();\r\n      });      \r\n    },\r\n    submittoadp: function(){  \r\n      var self = this;  \r\n      var jsonvals = JSON.stringify({'lmsid':self.lmsid });\r\n      fetch(adpapival+'api/enlist', {\r\n          method: 'Post',\r\n          body:jsonvals,\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        var successchk  = jsonret.data.results;      \r\n      }).catch(function(err) {\r\n          log.error('api/enlist: '+err); \r\n      });    \r\n    },\r\n    cancelDriverQualify: function(){\r\n      if(this.typeofqualification == \"S\") {\r\n        this.safetyqualifyprop = 0;\r\n      } else if(this.typeofqualification == \"P\") {\r\n        this.payrollqualifyprop = 0;\r\n      }\r\n    },\r\n    loadStaticData: function() {    \r\n      var self = this;\r\n      fetch(apival+'enlistapi/getstaticdata', {\r\n          method: 'Get',\r\n          credentials: 'include'\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        var resu = jsonret.data.results;\r\n        if(resu){\r\n          if(resu.length > 0) {\r\n            self.terminals = jsonret.data.results[0];\r\n          }\r\n          if(resu.length > 1) {\r\n            self.divisions = jsonret.data.results[1];\r\n            \r\n            self.divisions.push({ 'DIVCDE': \"DDF\",'DIVCO': \"BO\",'DIVNME': \"DRIVER DEVELOPMENT\"})\r\n          }          \r\n          if(resu.length > 2) {\r\n            self.companies = jsonret.data.results[2];\r\n            self.companies.push({'CompanyCode':'', 'CompanyName':'No Company Selected', 'CompanyIdentifier':'NA'});\r\n          }\r\n          if(resu.length > 3) {\r\n            self.frequencies = jsonret.data.results[3];\r\n          }\r\n          if(resu.length > 4) {\r\n            self.suicodes = jsonret.data.results[4];\r\n            /*var tempfill = new Array;\r\n            self.suicodes.forEach(function(sui){\r\n              if(!tempfill.includes(self.fixNull(sui.SUICode))){\r\n                tempfill.push(self.fixNull(sui.SUICode));\r\n              }\r\n            });\r\n            tempfill.push('59');\r\n            tempfill.push('95');\r\n            self.suicodesdist = tempfill.sort();*/\r\n          }\r\n          if(resu.length > 5) {\r\n            self.costcenters = jsonret.data.results[5];\r\n          }\r\n          if(resu.length > 6) {\r\n            self.states = jsonret.data.results[6];\r\n          }\r\n          if(resu.length > 7) {\r\n            self.countries = jsonret.data.results[7];\r\n          }\r\n          if(resu.length > 8) {\r\n            self.terminalmanagers = jsonret.data.results[8];\r\n          }\r\n          if(resu.length > 9) {\r\n            self.phonetypes = jsonret.data.results[9];\r\n          }\r\n          if(resu.length > 10) {\r\n            self.relationshiptypes = jsonret.data.results[10];\r\n          }\r\n          if(resu.length > 11) {\r\n            self.statemaritalstatus = jsonret.data.results[11];\r\n            self.fedmaritalstatus = jsonret.data.results[11];\r\n          }\r\n          /*if(resu.length > 12) {\r\n            self.fedmaritalstatus = jsonret.data.results[12];\r\n          }*/\r\n          if(resu.length > 12) {\r\n            self.statetaxcodes = jsonret.data.results[12];\r\n          }\r\n          if(resu.length > 13) {\r\n            self.raceethnicitylist = jsonret.data.results[13];\r\n          }\r\n          if(resu.length > 14) {\r\n            self.isocountries = jsonret.data.results[14];\r\n          }\r\n          if(resu.length > 15) {\r\n            self.suicodesdist = jsonret.data.results[15];\r\n          }\r\n        }\r\n      }).catch(function(err) {\r\n          log.error('enlistapi/getstaticdata'+err); \r\n      });\r\n    },\r\n    getphones: function(lmsid){    \r\n      var self = this;  \r\n      var jsonvals = JSON.stringify({\r\n            data: {  \r\n              'lmsid':lmsid\r\n            }\r\n          });\r\n      fetch(apival+'enlistapi/getphonedata', {\r\n          method: 'Post',\r\n          credentials: 'include',\r\n          body:jsonvals,\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        self.phonenumbers = jsonret.data.results;\r\n        var foundhome = false;         \r\n        self.phonenumbers.forEach(function(phone) {\r\n          if(phone.PHONE_TYPE == 'HOME'){\r\n            foundhome = true;\r\n          }\r\n        });\r\n        if(foundhome !== true){\r\n          //Add in the home phone from PersonalData if the type is not present in the multi table\r\n          self.phonenumbers.push(\r\n            {\r\n              'EMPLID':self.lmsid,\r\n              'PHONE_TYPE':'HOME',\r\n              'PHONE':self.homephone\r\n            }\r\n          );\r\n        }        \r\n        bus.$emit('setphones', self.phonenumbers);\r\n        \r\n      }).catch(function(err) {\r\n          log.error('enlistapi/getphonedata'+err); \r\n      });      \r\n    },\r\n    getemergencycontact: function(lmsid){    \r\n      var self = this;  \r\n      var jsonvals = JSON.stringify({\r\n            data: {  \r\n              'lmsid':lmsid\r\n            }\r\n          });\r\n      fetch(apival+'enlistapi/getemergencycontactdata', {\r\n          method: 'Post',\r\n          credentials: 'include',\r\n          body:jsonvals,\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        self.emergencycontact = jsonret.data.results;\r\n        bus.$emit('setemergencycontact', self.emergencycontact);        \r\n      }).catch(function(err) {\r\n          log.error('enlistapi/getphonedata'+err); \r\n      });      \r\n    },\r\n    getwfourdata: function(lmsid){    \r\n      var self = this;  \r\n      var jsonvals = JSON.stringify({\r\n            data: {  \r\n              'lmsid':lmsid\r\n            }\r\n          });\r\n      fetch(apival+'enlistapi/getwfourdata', {\r\n          method: 'Post',\r\n          credentials: 'include',\r\n          body:jsonvals,\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n      }).then(function(response) {\r\n        return response.json();\r\n      }).then(function(jsonret) {          \r\n        self.wfour = jsonret.data.results;\r\n        bus.$emit('setwfourtaxdata', self.wfour);        \r\n      }).catch(function(err) {\r\n          log.error('enlistapi/getwfourdata'+err); \r\n      });      \r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style >\r\n\r\ndiv .modal-content{\r\n  min-height: 160px;\r\n}\r\n.lbldetail {\r\n  font-weight: bold;\r\n  margin-right: 3px;\r\n  color:teal;\r\n}\r\n.statussurround {    \r\n  min-height: 350px;\r\n  border:0px solid red;\r\n}\r\n#statuslist {\r\n  height: 100%;\r\n  width: 100%;\r\n  background-image: url(\"http://cretecdn.acklie.com/src/assets/global/grayb.jpg\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n.detailrow {\r\n  margin-bottom:5px;\r\n}\r\n.vdp-datepicker  {\r\n    width: 100%;\r\n    border-radius: 3px;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    padding: 0px;\r\n    border-color: lightgray;\r\n    margin-right: 1px;\r\n}\r\n.company-detail{\r\n  height:30px;\r\n  width:69%;\r\n  border:1px solid;\r\n  float:left;\r\n  border-radius: 3px;\r\n  background-position: center; \r\n  background-repeat: no-repeat;\r\n}\r\n.topdetail{padding-bottom: 5px;margin-bottom: 3px; border-bottom: 2px solid lightblue}\r\n</style>\r\n<style>\r\ninput:-moz-read-only { /* For Firefox */\r\n    border-style: none !important;\r\n}\r\ninput:read-only {\r\n    border-style: none !important;\r\n}\r\n.cretediv{background-image: url('http://cretecdn.acklie.com/src/assets/global/Crete28h.png');border-color:#e51400;}\r\n.shafferdiv{background-image: url('http://cretecdn.acklie.com/src/assets/global/Shaffer28h.png');border-color:#004c97;}\r\n.addcompanydiv{background-image: url('http://cretecdn.acklie.com/src/assets/global/add-aicon.png');border-color:#cccaca;}\r\n.qualifybox{ margin-top:10px; }\r\n.dp{width:90%;float:left;}\r\n.dp-clear{float:left;height:20px;width:20px;}\r\n</style>"]}]}