{"remainingRequest":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\src\\vue\\bhhc\\src\\components\\Phone.vue?vue&type=style&index=0&id=9d1e7b24&scoped=true&lang=css&","dependencies":[{"path":"C:\\src\\vue\\bhhc\\src\\components\\Phone.vue","mtime":1576768066387},{"path":"C:\\src\\vue\\bhhc\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\src\\vue\\bhhc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5waG9uZWJveHNlcGVyYXRvcntmbG9hdDogbGVmdDt9DQoucGhvbmVib3hzbWFsbHtmbG9hdDogbGVmdDt3aWR0aDo3MHB4O30NCi5waG9uZWJveGxhcmdle2Zsb2F0OiBsZWZ0O3dpZHRoOjgwcHg7fQ0K"},{"version":3,"sources":["Phone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0RA;AACA;AACA","file":"Phone.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div>\r\n    <div style=\"width:100%\">\r\n      <label class=\"lbldetail phoneboxseperator\">{{phonetypelbl}}:</label>\r\n    </div> \r\n    <div style=\"width:100%;float:left\">\r\n      <span class=\"phoneboxseperator\">(</span>\r\n      <b-form-input\r\n        :id=\"phoneareacodeid\"\r\n        v-model=\"phoneareacodeprop\"\r\n        :ref=\"phoneareacodeid\"\r\n        class=\"phoneboxsmall\"\r\n        trim\r\n        maxlength=\"3\"\r\n        size=\"sm\" \r\n        :state=\"phonestate\"\r\n    ></b-form-input>        \r\n    <span class=\"phoneboxseperator\">)&nbsp;</span>\r\n    <b-form-input\r\n        :id=\"phoneprefixid\"\r\n        v-model=\"phoneprefixprop\"\r\n        :ref=\"phoneprefixid\"\r\n        class=\"phoneboxsmall\"\r\n        trim\r\n        maxlength=\"3\"\r\n        size=\"sm\" \r\n        :state=\"phonestate\"\r\n    ></b-form-input>        \r\n    <span class=\"phoneboxseperator\">&nbsp;-&nbsp;</span>\r\n    <b-form-input\r\n        :id=\"phonesuffixid\"\r\n        v-model=\"phonesuffixprop\"\r\n        :ref=\"phonesuffixid\"\r\n        class=\"phoneboxlarge\"\r\n        trim\r\n        maxlength=\"4\"\r\n        size=\"sm\" \r\n        :state=\"phonestate\"\r\n    ></b-form-input> \r\n    <p v-if=\"!phonestate\" class=\"error-message\">Please enter a valid phone number</p>\r\n    </div>  \r\n\r\n      <b-modal :id=\"'bv-modal-phone-error'+typeid\" title=\"Please Correct Phone\" class=\"bv-modal-phone-error\" size=\"sm\">\r\n        <div class=\"row\"> \r\n          <div class=\"col\"> \r\n            <span>Please correct any errors identified on phone number to update the phone number.</span>\r\n          </div>      \r\n        </div>  \r\n      </b-modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport apiurl from '../config/production';\r\nvar apival = apiurl();\r\nvar bunyan = require('bunyan');\r\nvar log = bunyan.createLogger({name: \"Enlist_App_PhoneVue\"});\r\nimport {bus} from '../main';\r\n\r\nexport default {\r\n  name: 'Phone',  \r\n  components: { \r\n  },\r\n  props: { \r\n      entityid:String,\r\n      lmsid:String,\r\n      typeid:Number,\r\n      ptypeof:String,\r\n      phonetypelbl:String,\r\n      phonenumber:String,\r\n      phoneareacodeid:String,\r\n      phoneprefixid:String,\r\n      phonesuffixid:String,\r\n      makeToast:Function,\r\n      runupdate:Boolean,\r\n      defaultphone:String,\r\n      ft:Boolean,\r\n      directload:Boolean,\r\n      containsSpecialCharacters:Function,\r\n  },\r\n  data() {\r\n    return {\r\n      phonenumberpropval:'',\r\n      phoneareacodepropval:'',\r\n      phoneprefixpropval:'',\r\n      phonesuffixpropval:'',\r\n      runupdatepropval:true,\r\n      isloaded:false\r\n    };\r\n  },\r\n  mounted:function(){    \r\n    bus.$on('setphone', this.setphone);\r\n    bus.$on('setphones', this.setphones);\r\n    bus.$on('submitsave', this.submit);\r\n  },  \r\n  computed: {\r\n    phonestate:  function() {     \r\n      var isEmpty =  (this.phoneareacodepropval.length == 0 && this.phoneprefixprop.length == 0 && this.phonesuffixprop.length == 0);\r\n      var chkstate = isEmpty ||\r\n        (this.phoneareacodepropval.length == 3 && this.phoneprefixprop.length == 3 && this.phonesuffixprop.length == 4);\r\n      if(chkstate && ! isEmpty) {\r\n        chkstate = !isNaN(this.phoneareacodepropval) && !isNaN(this.phoneprefixprop) && !isNaN(this.phonesuffixprop);        \r\n      }\r\n      if (typeof this.containsSpecialCharacters === \"function\") { \r\n        if(chkstate) {\r\n          chkstate = !this.containsSpecialCharacters(this.phoneareacodepropval);\r\n        }\r\n        if(chkstate) {\r\n          chkstate = !this.containsSpecialCharacters(this.phoneprefixprop);\r\n        }\r\n        if(chkstate) {\r\n          chkstate = !this.containsSpecialCharacters(this.phonesuffixprop);\r\n        }\r\n      }\r\n      return chkstate;     \r\n    },\r\n    phoneareacodeprop:  {      \r\n      get: function() {\r\n        var self = this;\r\n        if(!self.isloaded){\r\n            self.phoneareacodepropval = this.phonenumberareacodecomp;\r\n        }\r\n        return self.phoneareacodepropval.trim();\r\n      },\r\n      set: function(newValue) {\r\n        this.phoneareacodepropval = newValue;\r\n      }      \r\n    },\r\n    phoneprefixprop:  {      \r\n      get: function() {\r\n        var self = this;\r\n        if(!self.isloaded){\r\n            self.phoneprefixpropval = this.phonenumberprefixcomp;\r\n        }\r\n        return self.phoneprefixpropval.trim();\r\n      },\r\n      set: function(newValue) {\r\n        this.phoneprefixpropval = newValue;\r\n      }      \r\n    },\r\n    phonesuffixprop:  {      \r\n      get: function() {\r\n        var self = this;\r\n        if(!self.isloaded){\r\n            self.phonesuffixpropval = this.phonenumbersuffixcomp;\r\n        }\r\n        return self.phonesuffixpropval.trim();\r\n      },\r\n      set: function(newValue) {\r\n        this.phonesuffixpropval = newValue;\r\n      }      \r\n    },  \r\n    phonenumberprop:  {      \r\n      get: function() {\r\n        //if(this.directload){\r\n          //if(this.phonenumber) {\r\n          //this.phonenumberpropval = this.phonenumber;\r\n          //}\r\n        //}\r\n        return this.phonenumberpropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.phonenumberpropval = newValue;\r\n      }      \r\n    },    \r\n    phonenumberareacodecomp: function(){\r\n        if(this.phonenumberprop){\r\n          if(this.phonenumberprop.length > 0) {\r\n            var spltArry = this.phonenumberprop.split(\"/\");\r\n            if(spltArry.length > 0){\r\n              return spltArry[0].toString();\r\n            }\r\n          }  \r\n        }\r\n        return '';\r\n    },\r\n    phonenumberprefixcomp: function(){\r\n        if(this.phonenumberprop){\r\n          if(this.phonenumberprop.length > 0) {\r\n            var spltArry = this.phonenumberprop.split(\"/\");\r\n            if(spltArry.length > 1){\r\n              var chkArry = spltArry[1].split(\"-\");\r\n               if(spltArry.length > 0){\r\n                return chkArry[0].toString();\r\n               }\r\n            }\r\n          }  \r\n        }\r\n        return '';\r\n    },\r\n    phonenumbersuffixcomp: function(){\r\n      if(this.phonenumberprop){\r\n        if(this.phonenumberprop.length > 0) {\r\n          var spltArry = this.phonenumberprop.split(\"/\");\r\n          if(spltArry.length > 1){\r\n            var chkArry = spltArry[1].split(\"-\");\r\n              if(spltArry.length > 1){\r\n              return chkArry[1].toString();\r\n              }\r\n          }\r\n        }  \r\n      }\r\n      return '';\r\n    },\r\n    runupdateprop: {      \r\n      get: function() {\r\n        var self = this;\r\n        self.runupdatepropval = this.runupdate;   \r\n        return self.runupdatepropval;\r\n      },\r\n      set: function(newValue) {\r\n        this.runupdatepropval = newValue;\r\n      }      \r\n    },\r\n  },\r\n  methods:{\r\n    setphone: function(phonenumb, ptype){\r\n      var self = this;\r\n      if(self.ptypeof == ptype){\r\n        self.isloaded = false;\r\n        self.phonenumberprop = phonenumb;        \r\n          setTimeout(function() {  \r\n            self.isloaded = true;\r\n          }, 1500);   \r\n      }\r\n    },\r\n    setphones: function(phonenumbs){\r\n      var self = this;\r\n      self.isloaded = false;\r\n      phonenumbs.forEach(pnum => {\r\n        if(pnum.PHONE_TYPE.trim() == self.ptypeof) {\r\n          self.phonenumberprop = pnum.PHONE.trim();\r\n        }\r\n      });\r\n      \r\n        setTimeout(function() {  \r\n          self.isloaded = true;\r\n        }, 1500);   \r\n    },\r\n    submit: function(){   \r\n      if(this.runupdateprop == true){\r\n        var self = this;  \r\n         if(self.phonestate) { \r\n            var phn = self.phoneareacodeprop + '/' + self.phoneprefixprop + '-' + self.phonesuffixprop;\r\n            if(phn.length == 12) {\r\n              var jsonvals = JSON.stringify({\r\n                data: {\r\n                  'lmsid':self.lmsid,     \r\n                  'typeofphone':self.ptypeof,\r\n                  'phonenumber':phn,\r\n                }\r\n              });\r\n              fetch(apival+'enlistapi/updatephonedata', {\r\n                  method: 'Post',\r\n                  credentials: 'include',\r\n                  body:jsonvals,\r\n                  headers:{\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  }\r\n              }).then(function(response) {\r\n                return response.json();\r\n              }).then(function(jsonret) {          \r\n                var resu = jsonret.data;\r\n                if(resu == 'SUCCESS'){\r\n                  self.runupdateprop = false;        \r\n                }\r\n              }).catch(function(err) {\r\n                  log.error('enlistapi/updatephonedata'+err); \r\n              });      \r\n            }\r\n      } else {                \r\n          this.makeToast(this.camelize(this.typeofemail) + ' Phone', 'Please correct any errors identified on '+ this.typeofphone + ' phone to save the data.', \"danger\");\r\n        //self.$bvModal.show(\"bv-modal-phone-error\"+self.typeid);\r\n      }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.phoneboxseperator{float: left;}\r\n.phoneboxsmall{float: left;width:70px;}\r\n.phoneboxlarge{float: left;width:80px;}\r\n</style>"]}]}